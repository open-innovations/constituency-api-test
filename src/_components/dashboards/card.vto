{{>
	let region = "UK";
	let title = key.replace(/ \(([^\)]*)\)$/,function(m,p1){ region = p1; return ''; });
	const thresholds = [
		{ value: 5, label: "★★★★★", min: 0, max: 0.2 },
		{ value: 4, label: "★★★★", min: 0.2, max: 0.4 },
		{ value: 3, label: "★★★", min: 0.4, max: 0.6 },
		{ value: 2, label: "★★", min: 0.6, max: 0.8 },
		{ value: 1, label: "★", min: 0.8, max: 1.01 } // This has to be 1.01 rather than 1 due to using <
	];
	function rating(num, indicator, label){
		// Flip the number if indicator is 'l'
		const value = indicator === 'l' ? 1 - num : num;
		for(const t of thresholds){
			// If value is between the min and max, return that threshold object.
			if(value >= t.min && value < t.max) return t;
		}
		console.error("No rating found for "+label,num,value);
	}
}}
				<div class="card {{ theme }}" data-region="{{ region }}"><h4><a href="https://constituencies.open-innovations.org{{link}}">{{ title }}</a></h4>
				{{- if subtitle?.show == true -}}
					<p class="subtitle">{{ subtitle.value }}</p>
				{{- /if }}
				{{- if content -}}
					{{ content }}
				{{- /if -}}
				{{- if ratingData -}}
					{{>
						let ratings = new Array();
						let rankKey,r;

						if("length" in ratingData){
							for(let i = 0; i < ratingData.length; i++){
								if("rank" in ratingData[i] && "measure" in ratingData[i] && ratingData[i].measure in rankIndicator[theme][key]){
									r = rating(ratingData[i].rank,rankIndicator[theme][key][ratingData[i].measure],theme+' '+key);
									//r = {'value':ratingData[i].median,'label':(ratingData[i].preunit||"") + ratingData[i].median.toLocaleString() + (ratingData[i].postunit||"")};
									r.direction = rankIndicator[theme][key][ratingData[i].measure];
									if(typeof ratingData[i].median==="number") r.median = (ratingData[i].preunit||"") + (ratingData[i].median).toLocaleString() + (ratingData[i].postunit||"");
									ratings.push({'title':ratingData[i].measure,'rating':r});
								}
							}
						}
					-}}
					{{- if ratings.length == 1 -}}
						<p class="ratings"><span data-rate="{{ ratings[0].rating.direction }}" data-median="{{ ratings[0].rating.median }}">Relative rating</span>: <span title="{{ ratings[0].rating.value }} star">{{ ratings[0].rating.label }}</span></p>
					{{- else if ratings.length > 1 -}}
						<h5>Relative ratings:</h5><ul class="ratings">
							{{- for item of ratings -}}
								<li><span data-rate="{{ item.rating.direction }}" data-median="{{ item.rating.median }}">{{ item.title }}</span>: <span title="{{ item.rating.value }} star">{{ item.rating.label }}</span></li>
							{{- /for -}}
						</ul>
					{{- /if }}
				{{- /if -}}
				<div class="details">
					{{- if visDate }}
						{{- if visDate.match(/^[0-9]{4}$/) }}
							{{- visDate |> date("yyyy") }}
						{{- else if visDate.match(/^[0-9]{4}-[0-9]{2}$/) }}
							{{- visDate |> date("LLL yyyy") }}
						{{- else }}
							{{- visDate |> date("do LLL yyyy") }}
						{{- /if }}
					{{- /if }}
					{{- if attribution }}
						{{- if visDate }} | {{ /if }} <span class="attribution">Data: {{ attribution }}</span>
					{{- /if -}}
				</div></div>