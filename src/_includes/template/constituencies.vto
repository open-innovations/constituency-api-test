---
layout: template/page.vto
---
{{ comp.mpInfo({mpData, title}) }}
{{ for theme, titleObject of figures }}
    {{# Create the theme title #}}
    {{ comp.dashboards.themeTitle({ theme }) }}
    <p>See the <a href="#notes">notes</a> for more information about ratings.</p>
    <div class='grid'>
        {{ for visTitle, visObject of titleObject }}
            {{ set cardHeading = `<h4><a href="https://constituencies.open-innovations.org${visObject.url}" target="_blank">${visTitle}</a></h4>` }}
            {{ if visObject.opts.type == 'line' }}
                <div class="card padded {{ theme }}">
                    {{ cardHeading }}
                    {{ comp.oi.chart.line({
                        config: {
                            data: visObject.data,
                            axis: { 
                                x: visObject.opts.xaxis, 
                                y: { 
                                    grid: { 
                                        show: false 
                                    },
                                    ticks: []
                                }
                            },
                            series: [{
                                title: visTitle,
                                x: "x",
                                y: "value",
                                colour: fontColour,
                                tooltip: '{{ measure }}: <strong>{{preunit}}{{ value | toLocaleString() }}{{postunit}}</strong>'
                            }],
                            legend: { show: false },
							width: 480,
							height: 250
                        }
                    }) }}
                </div>
            {{ else if visObject.opts.type == 'bar' && visObject.data.length > 2 }}
                {{ set check = visObject.data |> checkNull()}}
                {{ if check }}
                    <div class="card padded {{ theme }}" id='bar'>
                        {{ cardHeading }}
                        {{ comp.oi.chart.bar({ 
                                config: {
                                    data: visObject.data,
                                    category: "measure",
                                    width: 400,
                                    height: 250,
                                    series: [
                                        {
                                            title: visTitle, 
                                            value: "value", 
                                            colour: fontColour || '#ffffff',
                                            tooltip: '{{ measure }}: <strong>{{ preunit }}{{ value }}{{ postunit }}</strong>'
                                        }
                                    ],
                                    axis: { 
                                    x: visObject.opts.xaxis, 
                                    y: { 
                                        grid: { 
                                            show: false 
                                        },
                                        ticks: []
                                    }
                                },
                                }
                            })
                        }}
                    {{ for item of visObject.data }}
                        {{# {{ console.log(visTitle, code, theme, item.measure )}} #}}
                        {{ comp.rating({key: visTitle, code: code, theme: theme, title: item.measure, t: true}) }}
                    {{ /for }}
                </div>
                {{ /if }}
            {{ else }}
                {{ for item of visObject.data }}
                    {{ if item.value != null || item.value != undefined }}
                    {{# We only make a card if the value isn't null or undefined. It can be 0, any number, or a string. #}}
                        {{ comp.dashboards.card({
                            code,
                            theme,
                            key: visTitle,
                            showSubtitle: visObject.opts.showSubtitle,
                            link: visObject.url,
                            preunit: item.preunit,
                            postunit: item.postunit,
                            title: item.measure, 
                            number: item.value,
                            visDate: item.metadata.date })
                        }}
                    {{ /if }}
                {{ /for }}    
            {{ /if }}
        {{ /for }}
    </div>
{{ /for }}

<hr class='hr--styled'>

<section>
<h2 id='notes'>Notes</h2>
    {{ include "../notes/rating.md" |> md }}
    {{ include "../notes/updated.md" |> md }}
</section>