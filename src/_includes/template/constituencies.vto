---
layout: template/page.vto
---
{{ comp.mpInfo({mpData, title}) }}
{{ for theme, data of figures }}
    {{# Create the theme title #}}
    {{# <h2 id="{{theme}}">{{theme |> capitalise() }}</h2> #}}
    {{ comp.dashboards.themeTitle({ theme }) }}
    <p>See the <a href="#notes">notes</a> for more information about rankings.</p>
    <div class='grid'>
        {{ for key, value of data }}
            {{ if value.length <= 3 }}
                {{ if value.length > 1 }}
                    {{ set showSubtitle = true }}
                {{ else }}
                    {{ set showSubtitle = false }}
                {{ /if }}
               {{ for item of value }}
                    {{ if item.value }}
                        {{ comp.dashboards.card({
                            code,
                            theme,
                            key,
                            showSubtitle,
                            preunit: item.preunit,
                            postunit: item.postunit,
                            scaleBy: item.scaleBy,
                            title: item.measure, 
                            number: item.value,
                            visDate: item.metadata.date })
                        }}
                    {{ /if }}
                {{ /for }}    
            {{ else }}          
                <div class="card padded {{ theme }}">
                    <h4><a href="/{{theme}}/{{key |> slugify() }}/">{{ key }}</a></h4>
                    {{ comp.oi.chart.line({
                        config: {
                            data: value,
                            axis: { 
                                x: { 
                                    grid: { 
                                        show: false 
                                    },
                                    ticks: [] 
                                }, 
                                y: { 
                                    grid: { 
                                        show: false 
                                    },
                                    ticks: []
                                }
                            },
                            series: [{
                                title: key,
                                x: "x",
                                y: "value",
                                colour: fontColour,
                                tooltip: '{{ measure }}: <strong>{{preunit}}{{ value }}{{postunit}}</strong>'
                                }],
                            legend: { show: false }
                            }
                        }) 
                    }}
                </div>
            {{ /if }}
        {{ /for }}
    </div>
{{ /for }}
<hr class='hr--styled'>
<section>
    <h2 id="notes">Notes</h2>
    <h3>Rankings</h3>
    <h4>Overview</h4>
    <p>
        All statistics are ranked in <strong>descending</strong> order. This means <strong>
            the higher the number,
            the higher the rank
        </strong>. Therefore, the ranking should be interpreted in the context of
        the statistic and what you intend to show with it.
    </p>
    <p>
        For example, a lower child poverty rate is better. Therefore a rank of
        650 would be the constituency with the "best" (lowest) child poverty rate.
    </p>
    <p>
        Conversely, for a statistic where a higher number is "better", e.g. Gigabit availability
        (%), a rank of 1 would be the constituency with the "best" (highest) gigabit availability.
    </p>
    <h4>Ties</h4>
    <p>
        We use a dense ranking method. Ties are given equal rank at the minimum rank of the group. Between groups,
        the rank always increases by 1. For example, if the 5th, 6th, and 7th constituencies
        all share the same value, they will each be ranked 5th. The next highest value would then be ranked 6th.
        This means that, for a given statistic, the lowest-ranked constituency will only have a rank of 650 if there are no ties
        AND if all constituencies have data.
    </p>
</section>
<script>
    // Dynamically set the innerHTML
    const imageContainer = document.getElementById("imageContainer");
    imageContainer.innerHTML = `<img src="{{mpData['Thumbnail']}}" style="height:100%; object-fit:cover;" alt="{{mpData.MP}} thumbnail">`;
</script>